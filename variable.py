""" 
type()関数で変数の型を調べる
"""
# 整数型
a=1
print(type(a))
a=10000000000
print(type(a))
# 浮動小数点型
a=1.23
print(type(a))
# 文字列型
a='Hello World'
print(type(a))
# 論理型
a=True
print(type(a))
# リスト型
a=[1,2,3]
print(type(a))
# タプル型
a=(1,2,3)
print(type(a))


""" 
エスケープシーケンス
"""
# 改行
print('改行\nします。')
# タブ
print('タブ\tです。')
# キャリッジリターン
print('キャリッジリターン\rです。')
# シングルクォーテーション
print('\'')
# ダブルクォーテーション
print("\"")
# 円マーク（バックスラッシュ）
print('\\')


""" 
文字列連結
"""
# 文字列リテラルを連結する場合
print('連結' 'します')
# 変数に代入した文字列を連結する場合
a='連結'
b='します'
print(a+b)


""" 
文字列の繰り返し
"""
a='Hey!'
print(a*3)


""" 
文字列中の文字の参照
"""
a='package'
# 文字列の左端から指定する場合
# 左端のインデックスは0
print(a[0])
print(a[2])
# 文字列の右端から指定する場合
# 右端のインデックスは-1
print(a[-1])
print(a[-4])


""" 
%演算子での書式を指定した出力
"""
# 整数（少数の付いていない数）を10進数で表示
print('%d' % 3)
# 整数を16進数で表示
print('%x' % 10)
# 整数を16進数で表示
print('%X' % 10)
# 実数（少数の付いている数）を表示
print('%f' % 1)
# 文字列を表示
print('%s' % 'Hollo World')
# 空白含めて4文字で表示（右揃え）
print('%4d' % 10)
# 空白含めて4文字で表示（左揃え）
print('%-4d' % 10)
# 0を使って4文字で表示
print('%04d' % 15)
# 小数点以下を3文字で表示
print('%.3f' % 3.14)


""" 
formatメソッドを使用した出力
"""
a='東京'
b=3
print('{}は{}位です'.format(a, b))
# 引数の順番を指定する。
print('{1}は{0}位です'.format(a, b))
# f文字列
print(f'{a}は{b}位です。')
# 書式（型）の指定
a=3
print('{:d}'.format(a))
# 3桁ごとにカンマを入れる
a=123456789
print('{:,}'.format(a))
# 空白含めて4文字で表示（右揃え）
print('{:>4}'.format(25))
# 空白含めて4文字で表示（左揃え）
print('{:<4}'.format(25))
# 空白含めて4文字で表示（中央揃え）
print('{:^4}'.format(25))